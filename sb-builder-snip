#!/usr/bin/env node

var program  = require('commander');
var config   = require('./lib/config').config;
var manifest = require('./lib/manifest').read();
var sprintf  = require("sprintf-js").sprintf;
var async    = require('async');
var fs       = require('fs-extra');
var spawn    = require('child_process').spawn;
var avconv   = require('avconv');
var mp3info  = require('mp3info');
var readline = require('readline');
var snip     = require('./lib/snip').snip;
var log      = require('./lib/log').log('sb-builder');

program
    .option('-f, --from <n>',     'Sound snippet start time')
    .option('-t, --to <n>',       'Sound snippet end time')
    .option('-d, --duration <n>', 'Sound snippet duration (alternative to --to)')
    .parse(process.argv);

if(program.args.length !== 1){
    log.info('Usage: sb-builder snip [options] <ID>');
    process.exit();
}

var info = _snip_handle_arguments(program.args[0]);
if(! info.id in manifest.sources){
    log.error('Video with ID '+id+' has not been downloaded yet!');
    process.exit(1);
}
var timeOpts = _handleTimeOpts(program);
snip(info.id, manifest, timeOpts, {}, function(err, sound){
        console.log("Finished extractiong sound "+sound.id+" ["+sound.text+"].");
        process.exit();
    }
);


function _handleTimeOpts(program){
    var timeOpts = {};
    timeOpts.from = +program.from || 0 ;
    if(program.duration){ timeOpts.duration = +program.duration; }
    else {
        if(program.to){
            timeOpts.duration = +program.to-timeOpts.from;
            if(timeOpts.duration < 0){
                log.warn("Sound snippet duration can't be < 0 ("+timeOpts.duration+"), using default ...");
                timeOpts.duration = 30;
            }
        }
        else { timeOpts.duration = 30; }
    }
    return timeOpts;
}

function _snip_handle_arguments(){
    var id, t, url;

    if(arguments[0].match(/youtube\.com/)){
        var urlInfo = URL.parse(arguments[0]);
        var params = qs.parse(urlInfo.query);
        id = params.v;
        t = params.t;
    } else if(arguments[0].match(/youtu\.be/)){
        var urlInfo = URL.parse(arguments[0]);
        var params = qs.parse(urlInfo.query);
        urlInfo.pathname.match(/^\/(\w+)$/);
        id = RegExp.$1
        t = params.t;
    }
    else { id = arguments[0]; }
    var info = {};
    if(t){ info.t = t; }
    info.id = id;
    return info;
}
